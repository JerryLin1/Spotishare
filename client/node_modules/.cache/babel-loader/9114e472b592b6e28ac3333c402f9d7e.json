{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Tiezh\\\\Desktop\\\\Spotishare\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState,useEffect,useContext}from\"react\";import{PlayCircle,PauseCircle,SkipForwardCircle,SkipBackwardCircle}from\"react-bootstrap-icons\";import{io}from\"socket.io-client\";import{ClientContext}from\"./contexts/ClientProvider\";import\"./css/Lobby.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var track={name:\"\",album:{images:[{url:\"\"}]},artists:[{name:\"\"}]};function WebPlayback(props){var client=useContext(ClientContext);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),is_paused=_useState2[0],setPaused=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),is_active=_useState4[0],setActive=_useState4[1];var _useState5=useState(undefined),_useState6=_slicedToArray(_useState5,2),player=_useState6[0],setPlayer=_useState6[1];var _useState7=useState(track),_useState8=_slicedToArray(_useState7,2),current_track=_useState8[0],setTrack=_useState8[1];useEffect(function(){// Create new spotify player instance\nvar script=document.createElement(\"script\");script.src=\"https://sdk.scdn.co/spotify-player.js\";script.async=true;document.body.appendChild(script);window.onSpotifyWebPlaybackSDKReady=function(){// Create tangible web player with the client's access token (requires Spotify premium)\nvar player=new window.Spotify.Player({name:\"spomongus\",getOAuthToken:function getOAuthToken(unlockPlayer){unlockPlayer(props.token);},volume:0.5});setPlayer(player);// Start playback on current device when the web player is ready\nplayer.addListener(\"ready\",function(_ref){var device_id=_ref.device_id;console.log(\"Ready with Device ID\",device_id);fetch(\"/playerReady?accessToken=\".concat(localStorage.getItem(\"spotify-access-token\"),\"&deviceId=\").concat(device_id,\"&roomId=\").concat(props.roomId));});player.addListener(\"not_ready\",function(_ref2){var device_id=_ref2.device_id;console.log(\"Device ID has gone offline\",device_id);});var prevPlayerState=undefined;player.addListener(\"player_state_changed\",function(state){if(!state)return;if(prevPlayerState===undefined)prevPlayerState=state;else{var ptrack=prevPlayerState.track_window.current_track.id;var strack=state.track_window.current_track.id;var ppos=prevPlayerState.position;var spos=state.position;if(ptrack!=strack){client.socket.emit(\"changeTrackRequest\",{trackId:state.track_window.current_track.id,track:state.track_window.current_track,state:state});console.log(state);}}setTrack(state.track_window.current_track);setPaused(state.paused);player.getCurrentState().then(function(state){return!state?setActive(false):setActive(true);});prevPlayerState=state;});player.connect();// Listen and enact playback changes\nclient.socket.on(\"paused\",function(isPaused){isPaused?player.pause():player.resume();});client.socket.on(\"changeTrack\",function(_ref3){var trackId=_ref3.trackId;client.socket.emit(\"changeTrack\",{accessToken:localStorage.getItem(\"spotify-access-token\"),trackId:trackId});});};},[]);if(!is_active){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"main-wrapper\",children:/*#__PURE__*/_jsx(\"b\",{children:\" Loading player... \"})})})});}else{return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"main-wrapper\",children:[/*#__PURE__*/_jsx(\"img\",{src:current_track.album.images[0].url,id:\"nowPlayingCover\",className:\"unselectable\",alt:\"\"}),/*#__PURE__*/_jsx(\"div\",{id:\"nowPlayingName\",children:current_track.name}),/*#__PURE__*/_jsx(\"div\",{id:\"nowPlayingArtist\",children:current_track.artists.map(function(artist){return artist.name;}).join(\", \")}),client.isHost&&/*#__PURE__*/_jsxs(\"div\",{id:\"nowPlayingSide\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"spotifyBtn\",onClick:function onClick(){player.previousTrack();},children:/*#__PURE__*/_jsx(SkipBackwardCircle,{})}),/*#__PURE__*/_jsx(\"button\",{className:\"spotifyBtn\",onClick:function onClick(){player.togglePlay();client.socket.emit(\"togglePlayPause\");},children:is_paused?/*#__PURE__*/_jsx(PlayCircle,{}):/*#__PURE__*/_jsx(PauseCircle,{})}),/*#__PURE__*/_jsx(\"button\",{className:\"spotifyBtn\",onClick:function onClick(){player.nextTrack();},children:/*#__PURE__*/_jsx(SkipForwardCircle,{})})]})]})})});}}export default WebPlayback;","map":{"version":3,"sources":["C:/Users/Tiezh/Desktop/Spotishare/client/src/WebPlayback.jsx"],"names":["React","useState","useEffect","useContext","PlayCircle","PauseCircle","SkipForwardCircle","SkipBackwardCircle","io","ClientContext","track","name","album","images","url","artists","WebPlayback","props","client","is_paused","setPaused","is_active","setActive","undefined","player","setPlayer","current_track","setTrack","script","document","createElement","src","async","body","appendChild","window","onSpotifyWebPlaybackSDKReady","Spotify","Player","getOAuthToken","unlockPlayer","token","volume","addListener","device_id","console","log","fetch","localStorage","getItem","roomId","prevPlayerState","state","ptrack","track_window","id","strack","ppos","position","spos","socket","emit","trackId","paused","getCurrentState","then","connect","on","isPaused","pause","resume","accessToken","map","artist","join","isHost","previousTrack","togglePlay","nextTrack"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { PlayCircle, PauseCircle, SkipForwardCircle, SkipBackwardCircle } from \"react-bootstrap-icons\";\nimport { io } from \"socket.io-client\";\nimport { ClientContext } from \"./contexts/ClientProvider\";\n\nimport \"./css/Lobby.css\";\n\nconst track = {\n    name: \"\",\n    album: {\n        images: [{ url: \"\" }],\n    },\n    artists: [{ name: \"\" }],\n};\n\nfunction WebPlayback(props) {\n    const client = useContext(ClientContext);\n    const [is_paused, setPaused] = useState(false);\n    const [is_active, setActive] = useState(false);\n    const [player, setPlayer] = useState(undefined);\n    const [current_track, setTrack] = useState(track);\n\n    useEffect(() => {\n        // Create new spotify player instance\n        const script = document.createElement(\"script\");\n        script.src = \"https://sdk.scdn.co/spotify-player.js\";\n        script.async = true;\n        document.body.appendChild(script);\n\n        window.onSpotifyWebPlaybackSDKReady = () => {\n            // Create tangible web player with the client's access token (requires Spotify premium)\n            const player = new window.Spotify.Player({\n                name: \"spomongus\",\n                getOAuthToken: (unlockPlayer) => {\n                    unlockPlayer(props.token);\n                },\n                volume: 0.5,\n            });\n            setPlayer(player);\n\n            // Start playback on current device when the web player is ready\n            player.addListener(\"ready\", ({ device_id }) => {\n                console.log(\"Ready with Device ID\", device_id);\n                fetch(\n                    `/playerReady?accessToken=${localStorage.getItem(\n                        \"spotify-access-token\"\n                    )}&deviceId=${device_id}&roomId=${props.roomId}`\n                );\n            });\n\n            player.addListener(\"not_ready\", ({ device_id }) => {\n                console.log(\"Device ID has gone offline\", device_id);\n            });\n\n            let prevPlayerState = undefined;\n            player.addListener(\"player_state_changed\", (state) => {\n                if (!state) return;\n                if (prevPlayerState === undefined) prevPlayerState = state;\n                else {\n                    let ptrack = prevPlayerState.track_window.current_track.id;\n                    let strack = state.track_window.current_track.id;\n                    let ppos = prevPlayerState.position;\n                    let spos = state.position;\n                    if (ptrack != strack) {\n                        client.socket.emit(\"changeTrackRequest\", {\n                            trackId: state.track_window.current_track.id,\n                            track: state.track_window.current_track,\n                            state: state,\n                        });\n                        console.log(state);\n                    }\n                }\n\n                setTrack(state.track_window.current_track);\n                setPaused(state.paused);\n                player.getCurrentState().then((state) => (!state ? setActive(false) : setActive(true)));\n\n                prevPlayerState = state;\n            });\n\n            player.connect();\n\n            // Listen and enact playback changes\n            client.socket.on(\"paused\", (isPaused) => {\n                isPaused ? player.pause() : player.resume();\n            });\n\n            client.socket.on(\"changeTrack\", ({ trackId }) => {\n                client.socket.emit(\"changeTrack\", {\n                    accessToken: localStorage.getItem(\"spotify-access-token\"),\n                    trackId: trackId,\n                });\n            });\n        };\n    }, []);\n\n    if (!is_active) {\n        return (\n            <>\n                <div className=\"container\">\n                    <div className=\"main-wrapper\">\n                        <b> Loading player... </b>\n                    </div>\n                </div>\n            </>\n        );\n    } else {\n        return (\n            <>\n                <div className=\"container\">\n                    <div className=\"main-wrapper\">\n                        <img\n                        src={current_track.album.images[0].url}\n                        id=\"nowPlayingCover\"\n                        className=\"unselectable\"\n                        alt=\"\"\n                    />\n                        <div id=\"nowPlayingName\">{current_track.name}</div>\n                        <div id=\"nowPlayingArtist\">{current_track.artists.map((artist) => artist.name).join(\", \")}</div>\n                        \n                        {client.isHost &&\n                            <div id=\"nowPlayingSide\">\n                                <button\n                                    className=\"spotifyBtn\"\n                                    onClick={() => {\n                                        player.previousTrack();\n                                    }}\n                                >\n                                    <SkipBackwardCircle />\n                                </button>\n\n                                <button\n                                    className=\"spotifyBtn\"\n                                    onClick={() => {\n                                        player.togglePlay();\n                                        client.socket.emit(\"togglePlayPause\");\n                                    }}\n                                >\n                                    {is_paused ? <PlayCircle /> : <PauseCircle />}\n                                </button>\n\n                                <button\n                                    className=\"spotifyBtn\"\n                                    onClick={() => {\n                                        player.nextTrack();\n                                    }}\n                                >\n                                    <SkipForwardCircle />\n                                </button>\n                            </div>\n                        }\n\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WebPlayback;\n"]},"metadata":{},"sourceType":"module"}